apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    useLibrary("org.apache.http.legacy")

    defaultConfig {
        minSdkVersion 14
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        targetSdkVersion 27
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            storeFile file("./z012v4_single.keystore")
            storePassword "z012v4single"
            keyAlias "z012v4"
            keyPassword "z012v4single"
        }
    }

    productFlavors {
        chengdu {
            dimension "city"
            applicationId "com.z012.chengdu.sc"
            versionCode 64
            versionName "4.0.4"
        }
        chongqing {
            dimension "city"
            applicationId "com.z012.chongqing.sc"
            versionCode 66
            versionName "4.0.3"
        }
    }

    productFlavors.all { flavor ->
        manifestPlaceholders.put("AppPackageName",applicationId)
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            zipAlignEnabled true
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a','x86_64'
            universalApk true
        }
    }

    lintOptions {
        abortOnError false
    }
    flavorDimensions "city"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    //android support library
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    debugImplementation project(path: ':ACDPullToRefresh')
    debugImplementation project(path: ':library')
    releaseImplementation project(path: ':ACDPullToRefresh')
    releaseImplementation project(path: ':library')

    //glide
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.github.bumptech.glide:okhttp-integration:1.3.1@aar'

    //okhttp
    implementation 'com.squareup.okhttp:okhttp:2.5.0'

    //fastjson
    implementation 'com.alibaba:fastjson:1.2.10'

    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    //logger
    implementation 'com.orhanobut:logger:2.1.1'

    //ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
